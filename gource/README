Gource is a C++ OpenGL application that interactively renders a visualization showing how developers interact with source code in a repository over time.

  http://code.google.com/p/gource/
  http://github.com/acaudwell/Gource
  http://www.thealphablenders.com/2009/12/gource-software-version-control-visualization/

What's happening in the Visualization ...

The connections between active directories are represented by splines, colored by the contents of the directories they connect to. 
When directories and files have not been modified for some time they slowly fade from view.

Files are represented as colored spheres (the color generated by a hash of the file extension) which are laid out in a spiral pattern around the center of the directory the files belong to.

Developers who are currently contributing to the project are floating near the files they are modifying.

Developers illuminate the file they are modifying with colored beams: (green adding, orange modifying, red deleting).

Create a local cache of gravatar images of the developers in .git/avatar (http://code.google.com/p/gource/wiki/GravatarExample).

From the root directory of this Rails application

  $ perl gource/get_gravatar_images.pl

To interactively play with a gource visualization (hiding the directories in vendor and public/javascript/):

  $ gource --user-image-dir .git/avatar/ --highlight-all-users --file-filter 'vendor|public\/javascripts\/.+\/.+' \
    --title 'Investigations: http://github.com/concord-consortium/rigse' --seconds-per-day 2 --auto-skip-seconds 0.2 \
    --background 000000 --disable-bloom -1280x720

See: http://github.com/acaudwell/Gource/blob/master/README for more information about these parameters and the commands available while the rendering is running.

Generating an mpeg4 video of the gource output (ffmpeg required):

  $ gource --user-image-dir .git/avatar/ --highlight-all-users --file-filter 'vendor|public\/javascripts\/.+\/.+' \
    --title 'Investigations: http://github.com/concord-consortium/rigse' --disable-progress  --seconds-per-day 2 \
    --auto-skip-seconds 0.2 --background 000000 --disable-bloom --multi-sampling   -1280x720 --stop-at-end \
    --output-ppm-stream - | ffmpeg -vpre libx264-default -y -b 3000K -r 60 -f image2pipe -vcodec ppm \
    -i - -vcodec libx264 gource/investigations.mp4

